// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YounicornApp.Infrastructure.Data;

namespace YounicornApp.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YounicornApp.Core.Entities.ContactForms", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_ContactForms");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SendBCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SendCC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbl_EmailTemplates");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.IspOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Adsl")
                        .HasColumnType("bit");

                    b.Property<string>("Bullet1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bullet2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bullet3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bullet4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bullet5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bundledetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discountdetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Displayname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Favourite")
                        .HasColumnType("int");

                    b.Property<bool>("Fibre")
                        .HasColumnType("bit");

                    b.Property<bool>("Fibreplus")
                        .HasColumnType("bit");

                    b.Property<float>("Installationcost")
                        .HasColumnType("real");

                    b.Property<int>("Ispid")
                        .HasColumnType("int");

                    b.Property<float>("Modemcost")
                        .HasColumnType("real");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Offername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Offerrating")
                        .HasColumnType("real");

                    b.Property<float>("Priceannual")
                        .HasColumnType("real");

                    b.Property<float>("Pricemonth")
                        .HasColumnType("real");

                    b.Property<string>("Speed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Terminationfee")
                        .HasColumnType("real");

                    b.Property<bool>("Vdsl")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Ispid");

                    b.ToTable("tbl_ISPoffers");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Displayname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ispname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Isprating")
                        .HasColumnType("real");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("tbl_ISPdetails");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RedirectUrl")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tbl_Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2021, 4, 20, 15, 30, 10, 182, DateTimeKind.Utc).AddTicks(6825),
                            IsActive = true,
                            Name = "Admin",
                            RedirectUrl = "/Provider/Index"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2021, 4, 20, 15, 30, 10, 182, DateTimeKind.Utc).AddTicks(7966),
                            IsActive = true,
                            Name = "Member",
                            RedirectUrl = ""
                        });
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.SignUpDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IspOfferId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IspOfferId");

                    b.ToTable("tbl_SignUps");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("tbl_Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2021, 4, 20, 15, 30, 10, 186, DateTimeKind.Utc).AddTicks(336),
                            Email = "admin@younicorn.com",
                            Firstname = "admin",
                            IsActive = true,
                            Lastname = "admin",
                            Password = "YouYou99!",
                            Phone = "12345678",
                            RoleId = 1,
                            Username = "younicorn"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2021, 4, 20, 15, 30, 10, 186, DateTimeKind.Utc).AddTicks(514),
                            Email = "testuser@younicorn.com",
                            Firstname = "user",
                            IsActive = true,
                            Lastname = "user",
                            Password = "user",
                            Phone = "123456789",
                            RoleId = 2,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.UserHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ActionDatetime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActionDetails")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<long>("ActionId")
                        .HasColumnType("bigint");

                    b.Property<string>("ActionType")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnquiryId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<long?>("IspId")
                        .HasColumnType("bigint");

                    b.Property<long?>("IspOfferId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserAddress")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("tbl_UserHistory");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.IspOffer", b =>
                {
                    b.HasOne("YounicornApp.Core.Entities.Provider", "Isp")
                        .WithMany("TblIspoffers")
                        .HasForeignKey("Ispid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Isp");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.SignUpDetails", b =>
                {
                    b.HasOne("YounicornApp.Core.Entities.IspOffer", "IspOffer")
                        .WithMany()
                        .HasForeignKey("IspOfferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IspOffer");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.User", b =>
                {
                    b.HasOne("YounicornApp.Core.Entities.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.Provider", b =>
                {
                    b.Navigation("TblIspoffers");
                });

            modelBuilder.Entity("YounicornApp.Core.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
